<?xml version="1.0" encoding="UTF-8"?>
<con:resource name="/studentpersonal/{StudentPersonalRefId}/studentcontactpersonal" path="/studentpersonal/{StudentPersonalRefId}/studentcontactpersonal" id="7bab7d7b-48f4-4bdb-8317-40e658cdc9bb" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="7bab7d7b-48f4-4bdb-8317-40e658cdc9bbfileName">%2Fstudentpersonal%2F%7BStudentPersonalRefId%7D%2Fstudentcontactpersonal</con:setting>
  </con:settings>
  <con:parameters/>
  <con:method name="getStudentContactPersonalsByStudent" id="1b6a025e-b31d-453d-a939-be5c331831de" method="GET">
    <con:description>&lt;p>Retrieve all available StudentContactPersonal records of the personal contact and demographic information relating to a all whānau members of a particular student enrolled at the given Provider.&lt;/p></con:description>
    <con:settings/>
    <con:parameters>
      <con:parameter>
        <con:name>fields</con:name>
        <con:style>QUERY</con:style>
        <con:description>Return only specified fields	`fields=name,nid`</con:description>
      </con:parameter>
      <con:parameter>
        <con:name>page</con:name>
        <con:style>QUERY</con:style>
        <con:description>Return nth page of results; default 0	`page=2`; applies to any call with repeated data</con:description>
      </con:parameter>
      <con:parameter>
        <con:name>max</con:name>
        <con:style>QUERY</con:style>
        <con:description>Maximum items per page, default 10,000; `max=100`; applies to any call with repeated data</con:description>
      </con:parameter>
      <con:parameter>
        <con:name>unwrap</con:name>
        <con:style>QUERY</con:style>
        <con:description>Remove top level wrapper from json results in single result reponses;	`unwrap=1`</con:description>
      </con:parameter>
      <con:parameter>
        <con:name>human</con:name>
        <con:style>QUERY</con:style>
        <con:description>For code set fields, translate code to human readable form;	`human=1`</con:description>
      </con:parameter>
      <con:parameter>
        <con:name>sort</con:name>
        <con:style>QUERY</con:style>
        <con:description>Sort results by specified field;	`sort=FamilyName`</con:description>
      </con:parameter>
      <con:parameter>
        <con:name>field</con:name>
        <con:style>QUERY</con:style>
        <con:description>Field to filter on when used with **pattern**;	`field=FamilyName`</con:description>
      </con:parameter>
      <con:parameter>
        <con:name>pattern</con:name>
        <con:style>QUERY</con:style>
        <con:description>Filter results using pattern on **field**; `pattern=We*`</con:description>
      </con:parameter>
      <con:parameter required="true">
        <con:name>Accept</con:name>
        <con:style>HEADER</con:style>
        <con:description>Standard HTTP accept header, choose between JSON and XML for response. Defaults to XML if this header is missing.</con:description>
      </con:parameter>
      <con:parameter required="true">
        <con:name>X-Edsby-OrganisationRefId</con:name>
        <con:style>HEADER</con:style>
        <con:description>&lt;p>The Ministry of Education Organisation Id of the Provider(or other Organisation); used to limit the scope of the API endpoint to a particular MoE Organisation.&lt;/p></con:description>
      </con:parameter>
      <con:parameter required="true">
        <con:name>StudentPersonalRefId</con:name>
        <con:style>TEMPLATE</con:style>
        <con:description>System RefId of the student.</con:description>
      </con:parameter>
    </con:parameters>
    <con:representation type="RESPONSE">
      <con:mediaType>application/json</con:mediaType>
      <con:status>200</con:status>
      <con:params/>
      <con:description>successful operation</con:description>
      <con:sampleContent>{
  "StudentContactPersonals" : {
    "StudentContactPersonal" : [ {
      "StudentContactPersonalRefId" : "7c834ea9-eda1-2090-347f-83297e1c290f",
      "StudentContactPersonalLocalId" : "P1234567",
      "PersonInfo" : {
        "Name" : {
          "FamilyName" : "Hagrid",
          "GivenName" : "Fridwulfa",
          "FullName" : "Fridwulfa Hagrid",
          "Type" : "LGL"
        },
        "AddressList" : {
          "Address" : [ {
            "Type" : "TH",
            "Role" : "PHY",
            "Line1" : "The Enchanted Wood",
            "Line2" : "533 Hogwart's Way",
            "City" : "Hogsmead",
            "PostalCode" : "7733"
          } ]
        },
        "EmailList" : {
          "Email" : [ {
            "Type" : "PRIM",
            "Address" : "ridwulfa@gmail.com"
          } ]
        },
        "PhoneNumberList" : {
          "PhoneNumber" : [ {
            "Type" : "MOB",
            "Number" : "(021) 300 999"
          } ]
        }
      }
    } ]
  }
}</con:sampleContent>
    </con:representation>
    <con:representation type="RESPONSE">
      <con:mediaType>application/xml</con:mediaType>
      <con:status>200</con:status>
      <con:params/>
      <con:description>successful operation</con:description>
      <con:sampleContent><![CDATA[<StudentContactPersonals>
  <StudentContactPersonal>
    <StudentContactPersonalRefId>7c834ea9-eda1-2090-347f-83297e1c290f</StudentContactPersonalRefId>
    <StudentContactPersonalLocalId>P1234567</StudentContactPersonalLocalId>
    <PersonInfo>
      <Name>
        <FamilyName>Hagrid</FamilyName>
        <GivenName>Fridwulfa</GivenName>
        <FullName>Fridwulfa Hagrid</FullName>
        <Type>LGL</Type>
      </Name>
      <AddressList>
        <Address>
          <Type>TH</Type>
          <Role>PHY</Role>
          <Line1>The Enchanted Wood</Line1>
          <Line2>533 Hogwart's Way</Line2>
          <City>Hogsmead</City>
          <PostalCode>7733</PostalCode>
        </Address>
      </AddressList>
      <EmailList>
        <Email>
          <Type>PRIM</Type>
          <Address>ridwulfa@gmail.com</Address>
        </Email>
      </EmailList>
      <PhoneNumberList>
        <PhoneNumber>
          <Type>MOB</Type>
          <Number>(021) 300 999</Number>
        </PhoneNumber>
      </PhoneNumberList>
    </PersonInfo>
  </StudentContactPersonal>
</StudentContactPersonals>]]></con:sampleContent>
    </con:representation>
    <con:representation type="RESPONSE">
      <con:mediaType>application/json</con:mediaType>
      <con:status>401</con:status>
      <con:params/>
      <con:description>Request didn't have Bearer token</con:description>
      <con:sampleContent>{
  "error" : 401,
  "when" : "2020-07-16T20:00:46.000Z",
  "errorstr" : "Unauthorised request: Bearer token missing??"
}</con:sampleContent>
    </con:representation>
    <con:representation type="RESPONSE">
      <con:mediaType>application/json</con:mediaType>
      <con:status>422</con:status>
      <con:params/>
      <con:description>Request didn't have Accept header</con:description>
      <con:sampleContent>{
  "error" : 422,
  "when" : "2020-07-16T20:00:46.000Z",
  "errorstr" : "Unprocessable request: Accept or X-Edsby-OrganisationRefId header missing?? Request body invalid??  Check sl-violations header in response"
}</con:sampleContent>
    </con:representation>
    <con:request name="Request 1" id="d940f8d7-8ac9-45ec-96c9-de835a905338" mediaType="application/json">
      <con:settings/>
      <con:endpoint>https://mocksifapi.azurewebsites.net/sif</con:endpoint>
      <con:credentials>
        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
        <con:authType>No Authorization</con:authType>
      </con:credentials>
      <con:parameters/>
      <con:environmentSpec>
        <con:entry environmentId="96c24e14-e8e1-43ad-a26f-ecd9dd30328f">
          <con:authProfile>MockSif - Basic Auth</con:authProfile>
        </con:entry>
      </con:environmentSpec>
    </con:request>
  </con:method>
</con:resource>
